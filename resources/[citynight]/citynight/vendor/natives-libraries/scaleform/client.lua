---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Dylan Malandain.
--- DateTime: 20/07/2019 14:47
---

---@type table
Scaleform = {}

---CallScaleformMethod
---@param scaleform string
---@param method string
---@return nil
---@public
function Scaleform:CallScaleformMethod(scaleform, method, ...)
    ---@type table
    local t
    ---@type table
    local args = { ... }
    BeginScaleformMovieMethod(scaleform, method)
    for k, v in ipairs(args) do
        t = type(v)
        if t == 'string' then
            PushScaleformMovieMethodParameterString(v)
        elseif t == 'number' then
            if string.match(tostring(v), "%.") then
                PushScaleformMovieFunctionParameterFloat(v)
            else
                PushScaleformMovieFunctionParameterInt(v)
            end
        elseif t == 'boolean' then
            PushScaleformMovieMethodParameterBool(v)
        end
    end
    EndScaleformMovieMethod()
end

---CallScaleformMethod
---@param scaleform string
---@param method string
---@return nil
---@public
function CallScaleformMethod(scaleform, method, ...)
    ---@type table
    local t
    ---@type table
    local args = { ... }
    BeginScaleformMovieMethod(scaleform, method)
    for k, v in ipairs(args) do
        t = type(v)
        if t == 'string' then
            PushScaleformMovieMethodParameterString(v)
        elseif t == 'number' then
            if string.match(tostring(v), "%.") then
                PushScaleformMovieFunctionParameterFloat(v)
            else
                PushScaleformMovieFunctionParameterInt(v)
            end
        elseif t == 'boolean' then
            PushScaleformMovieMethodParameterBool(v)
        end
    end
    EndScaleformMovieMethod()
end

---CreateNamedRenderTargetForModel
---@param Name string
---@param Model string
---@return function
---@public
function CreateNamedRenderTargetForModel(Name, Model)
    ---@type number
    local Handle = 0
    if not IsNamedRendertargetRegistered(Name) then
        RegisterNamedRendertarget(Name, 0)
    end
    if not IsNamedRendertargetLinked(Model) then
        LinkNamedRendertarget(Model)
    end
    if IsNamedRendertargetRegistered(Name) then
        Handle = GetNamedRendertargetRenderId(Name)
    end
    return Handle
end


function SetScaleformParams(scaleform, data)
    data = data or {}
    for k, v in pairs(data) do
        PushScaleformMovieFunction(scaleform, v.name)
        if v.param then
            for _, par in pairs(v.param) do
                if math.type(par) == "integer" then
                    PushScaleformMovieFunctionParameterInt(par)
                elseif type(par) == "boolean" then
                    PushScaleformMovieFunctionParameterBool(par)
                elseif math.type(par) == "float" then
                    PushScaleformMovieFunctionParameterFloat(par)
                elseif type(par) == "string" then
                    PushScaleformMovieFunctionParameterString(par)
                end
            end
        end
        if v.func then
            v.func()
        end
        PopScaleformMovieFunctionVoid()
    end
end

function createScaleform(name, data)
    if not name or string.len(name) <= 0 then
        return
    end
    local scaleform = Streaming:Scaleform(name)
    SetScaleformParams(scaleform, data)
    return scaleform
end