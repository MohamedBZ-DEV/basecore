---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Dylan Malandain.
--- DateTime: 02/09/2019 15:01
---

local Items = {
    mp_f_freemode_01 = {
        [1] = {
            List = { "Standard", "Protubérant", "Plat", "-" },
            Index = 1,
        },
        [2] = {
            List = { "Standard", "Ouverts", "Plissés", "-" },
            Index = 1,
        },
        [3] = {
            List = { "Standard", "Large", "Petit", "-" },
            Index = 1,
        },
        [4] = {
            List = { "Standard", "Saillante", "Incurvée", "-" },
            Index = 1,
        },
        [5] = {
            List = { "Standard", "Cassé", "Vers le haut", "-" },
            Index = 1,
        },
        [6] = {
            List = { "Standard", "Larges", "Fines", "-" },
            Index = 1,
        },
        [7] = {
            List = { "Standard", "Grosses", "Minces", "-" },
            Index = 1,
        },
        [8] = {
            List = { "Standard", "Épaisses", "Minces", "-" },
            Index = 1,
        },
        [9] = {
            List = { "Standard", "Carrée", "Ronde", "-" },
            Index = 1,
        },
        [10] = {
            List = { "Standard", "Large", "Petit", "-" },
            Index = 1,
        },
        [11] = {
            List = { "Standard", "Pointu", "Rond", "-" },
            Index = 1,
        },
    },
    mp_m_freemode_01 = {
        [1] = {
            List = { "Standard", "Protubérant", "Plat", "-" },
            Index = 1,
        },
        [2] = {
            List = { "Standard", "Ouverts", "Plissés", "-" },
            Index = 1,
        },
        [3] = {
            List = { "Standard", "Large", "Petit", "-" },
            Index = 1,
        },
        [4] = {
            List = { "Standard", "Saillante", "Incurvée", "-" },
            Index = 1,
        },
        [5] = {
            List = { "Standard", "Cassé", "Vers le haut", "-" },
            Index = 1,
        },
        [6] = {
            List = { "Standard", "Larges", "Fines", "-" },
            Index = 1,
        },
        [7] = {
            List = { "Standard", "Grosses", "Minces", "-" },
            Index = 1,
        },
        [8] = {
            List = { "Standard", "Épaisses", "Minces", "-" },
            Index = 1,
        },
        [9] = {
            List = { "Standard", "Carrée", "Ronde", "-" },
            Index = 1,
        },
        [10] = {
            List = { "Standard", "Large", "Petit", "-" },
            Index = 1,
        },
        [11] = {
            List = { "Standard", "Pointu", "Rond", "-" },
            Index = 1,
        },
    }
}
local self = {
    FACE_F_BROW = false,
    FACE_F_EYES = false,
    FACE_F_NOSE = false,
    FACE_F_NOSEP = false,
    FACE_F_NOSET = false,
    FACE_F_CHEEK = false,
    FACE_F_CHEEKS = false,
    FACE_F_LIPS = false,
    FACE_F_JAW = false,
    FACE_F_CHIN = false,
    FACE_F_CHINS = false,
}
function CreatorMenuFaceFeatures(indexCharacter, createPlayer)
    RageUI.DrawContent({ header = true, instructionalButton = true }, function()
        RageUI.List(GetLabelText("FACE_F_BROW"), Items[createPlayer.Model][1].List, Items[createPlayer.Model][1].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][1].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.height = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.forward = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.height = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.forward = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.height = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.forward = 0.70
                end
                self.FACE_F_BROW = true
                self.FACE_F_CHINS = false
            else
                self.FACE_F_BROW = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_EYES"), Items[createPlayer.Model][2].List, Items[createPlayer.Model][2].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][2].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.eye.opening = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.eye.opening = 0.9
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.eye.opening = 0.30
                end
                self.FACE_F_EYES = true
            else
                self.FACE_F_EYES = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_NOSE"), Items[createPlayer.Model][3].List, Items[createPlayer.Model][3].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][3].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.width = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.lowering = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.width = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.lowering = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.width = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.lowering = 0.70
                end
                self.FACE_F_NOSE = true
            else
                self.FACE_F_NOSE = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_NOSEP"), Items[createPlayer.Model][4].List, Items[createPlayer.Model][4].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][4].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.height = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.twist = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.height = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.twist = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.height = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.twist = 0.70
                end
                self.FACE_F_NOSEP = true
            else
                self.FACE_F_NOSEP = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_NOSET"), Items[createPlayer.Model][5].List, Items[createPlayer.Model][5].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][5].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.height = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.length = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.height = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.length = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.height = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.length = 0.70
                end
                self.FACE_F_NOSET = true
            else
                self.FACE_F_NOSET = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_CHEEK"), Items[createPlayer.Model][6].List, Items[createPlayer.Model][6].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][6].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.height = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.height = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.height = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = 0.70
                end
                self.FACE_F_CHEEK = true
            else
                self.FACE_F_CHEEK = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_CHEEKS"), Items[createPlayer.Model][7].List, Items[createPlayer.Model][7].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][7].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = 0.9
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = 0.30
                end
                self.FACE_F_CHEEKS = true
            else
                self.FACE_F_CHEEKS = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_LIPS"), Items[createPlayer.Model][8].List, Items[createPlayer.Model][8].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][8].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.lips.thickness = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.lips.thickness = 0.9
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.lips.thickness = 0.30
                end
                self.FACE_F_LIPS = true
            else
                self.FACE_F_LIPS = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_JAW"), Items[createPlayer.Model][9].List, Items[createPlayer.Model][9].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][9].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.width = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.backLength = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.width = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.backLength = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.width = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.backLength = 0.70
                end
                self.FACE_F_JAW = true
            else
                self.FACE_F_JAW = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_CHIN"), Items[createPlayer.Model][10].List, Items[createPlayer.Model][10].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][10].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.length = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.width = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.length = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.width = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.length = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.width = 0.70
                end
                self.FACE_F_CHIN = true
            else
                self.FACE_F_CHIN = false
            end
        end)
        RageUI.List(GetLabelText("FACE_F_CHINS"), Items[createPlayer.Model][11].List, Items[createPlayer.Model][11].Index, GetLabelText("FACE_FEAT_H"), {}, true, function(Hovered, Active, Selected, Index)
            Items[createPlayer.Model][11].Index = Index
            if (Active) then
                if (Index == 1 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.hole = 0.5
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.lowering = 0.5
                elseif (Index == 2 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.hole = 0.9
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.lowering = 0.6
                elseif (Index == 3 and Selected) then
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.hole = 0.30
                    indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.lowering = 0.70
                end
                self.FACE_F_CHINS = true
                self.FACE_F_BROW = false
            else
                self.FACE_F_CHINS = false
            end
        end)
    end, function()
        ---Panels
        if (self.FACE_F_BROW) then
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.forward, indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.height, "Haut", "Bas", "Intérieur", "Extérieur", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.eyebrow.height = Y
                createPlayer[createPlayer.Model].Face.facial.features.eyebrow.forward = X
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.height = Y
                indexCharacter[createPlayer.Model].Face.facial.features.eyebrow.forward = X
            end)
        end
        if (self.FACE_F_EYES) then
            RageUI.GridPanelHorizontal(indexCharacter[createPlayer.Model].Face.facial.features.eye.opening, "Ouverts", "Plissés", function(Hovered, Active, X)
                createPlayer[createPlayer.Model].Face.facial.features.eye.opening = X
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.eye.opening = X
            end)
        end
        if (self.FACE_F_NOSE) then
            --- Nez
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.nose.width, indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.lowering, "Relevé", "Bas", "Fin", "Épais", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.nose.width = X
                createPlayer[createPlayer.Model].Face.facial.features.nose.peak.lowering = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.nose.width = X
                indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.lowering = Y
            end)
        end
        if (self.FACE_F_NOSEP) then
            --- Arête
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.height, indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.twist, "Saillante", "Incurvée", "Courte", "Longue", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.nose.bone.height = X
                createPlayer[createPlayer.Model].Face.facial.features.nose.bone.twist = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.height = X
                indexCharacter[createPlayer.Model].Face.facial.features.nose.bone.twist = Y
            end)
        end
        if (self.FACE_F_NOSET) then
            --- Peak
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.height, indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.length, "Bout vers le haut", "Bout vers me nas", "Cassé gauche", "Cassé droite", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.nose.peak.height = X
                createPlayer[createPlayer.Model].Face.facial.features.nose.peak.length = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.height = X
                indexCharacter[createPlayer.Model].Face.facial.features.nose.peak.length = Y
            end)
        end
        if (self.FACE_F_CHEEK) then
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.height, indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width, "Haut", "Bas", "Intérieur", "Extérieur", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.cheeks.bone.height = X
                createPlayer[createPlayer.Model].Face.facial.features.cheeks.bone.width = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.height = X
                indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = Y
            end)
        end
        if (self.FACE_F_CHEEKS) then
            RageUI.GridPanelHorizontal(indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width, "Émacié", "Bouffi", function(Hovered, Active, X)
                createPlayer[createPlayer.Model].Face.facial.features.cheeks.bone.width = X
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.cheeks.bone.width = X
            end)
        end
        if (self.FACE_F_LIPS) then
            RageUI.GridPanelHorizontal(indexCharacter[createPlayer.Model].Face.facial.features.lips.thickness, "Minces", "Épaisses", function(Hovered, Active, X)
                createPlayer[createPlayer.Model].Face.facial.features.lips.thickness = X
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.lips.thickness = X
            end)
        end
        if (self.FACE_F_JAW) then
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.width, indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.backLength, "Ronde", "Carrée", "Étroite", "Large", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.jaw.bone.width = X
                createPlayer[createPlayer.Model].Face.facial.features.jaw.bone.backLength = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.width = X
                indexCharacter[createPlayer.Model].Face.facial.features.jaw.bone.backLength = Y
            end)
        end
        if (self.FACE_F_CHIN) then
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.length, indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.width, "Haut", "Bas", "Intérieur", "Extérieur", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.chimp.bone.length = X
                createPlayer[createPlayer.Model].Face.facial.features.chimp.bone.width = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.length = X
                indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.width = Y
            end)
        end
        if (self.FACE_F_CHINS) then
            RageUI.GridPanel(indexCharacter[createPlayer.Model].Face.facial.features.chimp.hole, indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.lowering, "Arrondi", "Fossette", "Carré", "Pointu", function(Hovered, Active, X, Y)
                createPlayer[createPlayer.Model].Face.facial.features.chimp.hole = X
                createPlayer[createPlayer.Model].Face.facial.features.chimp.bone.lowering = Y
                UpdateEntityFace(GetPlayerPed(-1), createPlayer[createPlayer.Model].Face)
                indexCharacter[createPlayer.Model].Face.facial.features.chimp.hole = X
                indexCharacter[createPlayer.Model].Face.facial.features.chimp.bone.lowering = Y
            end)
        end
    end)
end